name: build

on:
  push:

env:
  CONFIGURATION: Release
  DOTNET_NOLOGO: true # https://github.com/actions/setup-dotnet#environment-variables-to-use-with-dotnet

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
    
      - name: Setup .NET
        uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # tag=v2.1.0
        with:
          dotnet-version: 3.1.x

      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # v3.0.11
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}

      - name: restore packages
        run: dotnet restore EPPlusTest/EPPlusTest.Core.csproj

      - name: build
        run: dotnet build EPPlusTest/EPPlusTest.Core.csproj --no-restore

      - name: test
        run: dotnet test EPPlusTest/EPPlusTest.Core.csproj --no-build --collect:"XPlat Code Coverage" --settings EPPlusTest.runsettings

      - name: Codecov
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # v3.1.1
        if: always()

  publish:
    runs-on: windows-latest
    needs: test

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          fetch-depth: 0
    
      - name: Setup .NET
        uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # tag=v2.1.0
        with:
          dotnet-version: 3.1.x

      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # v3.0.11
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}

      - name: restore packages
        run: dotnet restore EPPlus/EPPlus.MultiTarget.csproj

      - name: build
        run: dotnet build EPPlus/EPPlus.MultiTarget.csproj --no-restore

      - name: pack
        run: dotnet pack EPPlus/EPPlus.MultiTarget.csproj --no-build

      - name: publish to github
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          dotnet nuget push *.nupkg \
            -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
            -k ${{ secrets.GITHUB_TOKEN }} \
            --skip-duplicate
        working-directory: EPPlus/bin/${{ env.CONFIGURATION }}
        shell: bash

      - name: publish to nuget
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-')
        run: |
          dotnet nuget push *.nupkg \
            -s nuget.org \
            -k ${{ secrets.NUGET_API_KEY }} \
            --skip-duplicate
        working-directory: EPPlus/bin/${{ env.CONFIGURATION }}
        shell: bash
